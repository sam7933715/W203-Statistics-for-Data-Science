knitr::opts_chunk$set(echo = TRUE)
S = read.csv("/Users/shanhe/Desktop/w203/Lab/Lab_3/ANES_2012_sel.csv")
table(S$libcpre_self, as.numeric(S$libcpre_self))
head(substr(S$libcpre_self,0,1))
head(substr(S$libcpre_self,1,1))
S_n <- (S,
S_n <- (S,
S_n <- mutate(S,
libcpre_self_n = ifelse(substr(S$libcpre_self,0,1) == "-", 0, substr(S$libcpre_self,0,1)),
libcpo_self_n = ifelse(substr(S$libcpo_self,0,1) == "-", 0, substr(S$libcpo_self,0,1))
)
library(dplyr)
library(dplyr)
S_n <- mutate(S,
libcpre_self_n = ifelse(substr(S$libcpre_self,0,1) == "-", 0, substr(S$libcpre_self,0,1)),
libcpo_self_n = ifelse(substr(S$libcpo_self,0,1) == "-", 0, substr(S$libcpo_self,0,1))
)
head(S_n)
head(S$libcpre_self,S$libcpre_self_n)
S_n["libcpre_self_n","libcpo_self_n"]
S_n[,c("libcpre_self_n","libcpo_self_n")]
S_n[,c("libcpre_self","libcpre_self_n", "libcpo_self_n","libcpo_self_n")]
S_n[,c("libcpre_self","libcpre_self_n", "libcpo_self","libcpo_self_n")]
table(S$libcpo_self, as.numeric(S$libcpo_self))
class(S_n$libcpre_self_n)
mean(S_n$libcpre_self_n)
S_n <- mutate(S,
libcpre_self_n = ifelse(substr(S$libcpre_self,0,1) == "-", 0, as.integer(substr(S$libcpre_self,0,1)),
libcpo_self_n = ifelse(substr(S$libcpo_self,0,1) == "-", 0, as.integer(substr(S$libcpo_self,0,1)))
)
mean(S_n$libcpre_self_n)
S_n <- mutate(S,
libcpre_self_n = ifelse(substr(S$libcpre_self,0,1) == "-", 0, as.integer(substr(S$libcpre_self,0,1)),
libcpo_self_n = ifelse(substr(S$libcpo_self,0,1) == "-", 0, as.integer(substr(S$libcpo_self,0,1)))
)
mean(S_n$libcpre_self_n)
S_n <- mutate(
S,
libcpre_self_n = ifelse(substr(S$libcpre_self,0,1) == "-", 0, as.integer(substr(S$libcpre_self,0,1))),
libcpo_self_n = ifelse(substr(S$libcpo_self,0,1) == "-", 0, as.integer(substr(S$libcpo_self,0,1)))
)
S_n[,c(is.na(libcpre_self_n),"libcpre_self","libcpre_self_n","libcpo_self", "libcpro_self_n")]
S_n[is.na(S_n$libcpre_self_n),c("libcpre_self","libcpre_self_n","libcpo_self", "libcpro_self_n")]
S_n[is.na(S_n$libcpre_self_n),]
S_n[is.na(S_n$libcpre_self_n),c("libcpre_self","libcpre_self_n","libcpo_self", "libcpo_self_n")]
S_n[is.na(S_n$libcpo_self_n),c("libcpre_self","libcpre_self_n","libcpo_self", "libcpo_self_n")]
S_n[rowsums(is,na(S_n)) > 0,]
S_n[rowSums(is,na(S_n)) > 0,]
S_n[rowSums(is.na(S_n)) > 0,]
S_n <- mutate(
S,
libcpre_self_n = ifelse(substr(S$libcpre_self,0,1) == "-", 0, as.integer(substr(S$libcpre_self,0,1))),
libcpo_self_n = ifelse(substr(S$libcpo_self,0,1) == "-", 0, as.integer(substr(S$libcpo_self,0,1)))
)
unique(S_n[c("libcpre_self","libcpre_self_n","libcpo_self", "libcpo_self_n")])
unique(S_n[,c("libcpre_self","libcpre_self_n","libcpo_self", "libcpo_self_n")])
unique(S_n[,c("libcpre_self","libcpre_self_n")])
unique(S_n[,c("libcpo_self","libcpo_self_n")])
unique(S_n[,c("libcpre_self","libcpre_self_n")])
S_n <- mutate(
S,
libcpre_self_n = ifelse(substr(S$libcpre_self,0,1) == "-", 0, as.numeric(substr(S$libcpre_self,0,1))),
libcpo_self_n = ifelse(substr(S$libcpo_self,0,1) == "-", 0, as.numeric(substr(S$libcpo_self,0,1)))
)
S_n <- mutate(
S,
libcpre_self_n = ifelse(substr(S$libcpre_self,0,1) == "-", 0, substr(S$libcpre_self,0,1)),
libcpo_self_n = ifelse(substr(S$libcpo_self,0,1) == "-", 0, substr(S$libcpo_self,0,1))
)
unique(as.numeric(S_n$libcpo_self_n))
as.numeric(S_n$libcpo_self_n)
as.numeric(S_n$libcpre_self_n)
S_n <- mutate(
S,
libcpre_self_n = as.numeric(ifelse(substr(S$libcpre_self,0,1) == "-", 0, substr(S$libcpre_self,0,1))),
libcpo_self_n = as.numeric(ifelse(substr(S$libcpo_self,0,1) == "-", 0, substr(S$libcpo_self,0,1)))
)
mean(S_n[, c("libcpre_self_n", "libcpre_self_n")]
mean(S_n[, c("libcpre_self_n", "libcpre_self_n")])
S_n[, c("libcpre_self_n", "libcpre_self_n")]
summary(S_n[, c("libcpre_self_n", "libcpre_self_n")]
summary(S_n[, c("libcpre_self_n", "libcpre_self_n")])
summary(S_n[, c("libcpre_self_n", "libcpre_self_n")])
mean(S_n[, c("libcpre_self_n", "libcpo_self_n")])
summary(S_n[, c("libcpre_self_n", "libcpo_self_n")])
S_n_1 <- subset(S_n, libcpre_self_n != 0 & libcpo_self_n != 0, select(libcpre_self_n,libcpo_self_n))
S_n_1 <- subset(S_n, libcpre_self_n != 0 & libcpo_self_n != 0, select= c(libcpre_self_n,libcpo_self_n))
unique(S_n_1[,c(libcpre_self_n,libcpo_self_n)])
unique(S_n_1[,c("libcpre_self_n"","libcpo_self_n"")])
unique(S_n_1[,c("libcpre_self_n","libcpo_self_n")])
D_1 = S_n_1$libcpo_self_n - S_n_1$libcpre_self_n
hist(D_1)
hist(D_1, breaks = 8)
hist(D_1, breaks = 20)
hist(D_1, breaks = 15)
hist(D_1, breaks = 16)
qqplot(D_1)
qqplot(D_1)
qqplot(D_1, D_1)
qqplot(D_1)
qqnorm(D_1)
t.test(S_n_1$libcpo_self_n, S_n_1$libcpre_self_n, paired = TRUE)
t.test(D_1)
t.test(S_n_1$libcpo_self_n, S_n_1$libcpre_self_n, paired = TRUE)
t.test(D_1)
t.test(D_1)
t.test(D_1)
t.test(D_1)
t.test(S_n_1$libcpo_self_n, S_n_1$libcpre_self_n, paired = TRUE)
t.test(D_1)
t.test(D_1)
t.test(S_n_1$libcpo_self_n, S_n_1$libcpre_self_n, paired = TRUE)
library(effsize)
install.packages("effsize")
library(effsize)
summary(D_1)
hist(D_1, breaks = 16)
c(means(S_n_1$libcpre_self_n), S_n_1$libcpre_self_n)
c(means(S_n_1$libcpre_self_n), mean(S_n_1$libcpre_self_n))
c(mean(S_n_1$libcpre_self_n), mean(S_n_1$libcpre_self_n))
c(mean(S_n_1$libcpre_self_n), mean(S_n_1$libcpo_self_n))
D_1 = S_n_1$libcpo_self_n - S_n_1$libcpre_self_n
summary(D_1)
hist(D_1, breaks = 16)
qqnorm(D_1)
t.test(S_n_1$libcpo_self_n, S_n_1$libcpre_self_n, paired = TRUE)
t.test(D_1)
t.test(S_n_1$libcpo_self_n, S_n_1$libcpre_self_n, paired = TRUE)
cohen.d(S_n_1$libcpo_self_n, S_n_1$libcpre_self_n, paired = TRUE)
cohen.d(S_n_1$libcpo_self_n - S_n_1$libcpre_self_n)
cohen.d(D1)
cohen.d(D_1)
cohen.d(S_n_1$libcpo_self_n, S_n_1$libcpre_self_n, paired = TRUE)
summary(S_n$pid_x)
summary(S_n$dem_age_r_x)
summary(S_n$dem_age_r_x)
summary(S_n$pid_x)
summary(S_n$dem_age_r_x)
summary(S_n$pid_x)
summary(S_n$dem_age_r_x)
summary(S_n$pid_x)
head(S_n[,"pid_x", "dem_age_r_x"])
head(S_n[,"pid_x", "dem_age_r_x"])
head(S_n[,c("pid_x", "dem_age_r_x")])
summary(S_n$pid_x)
summary(S_n$dem_age_r_x)
cohen.d(S_n_1$libcpo_self_n, S_n_1$libcpre_self_n, paired = TRUE)
summary(S_n[, c("libcpre_self_n", "libcpo_self_n")])
S_n_2 <- mutate(subset(S_n, substr(pid_x,0,1) != '-' & substr(pid_x,0,1) != '4'),
voter_cat = ifesle(as.numeric(substr(pid_x,0,1)) < 4, 'Democrat', 'Republican'))
S_n_2 <- mutate(subset(S_n, substr(pid_x,0,1) != '-' & substr(pid_x,0,1) != '4'),
voter_cat = ifelse(as.numeric(substr(pid_x,0,1)) < 4, 'Democrat', 'Republican'))
unique(S_n_2$pid_x, S_n_2$voter_cat)
S_n_2 <- mutate(subset(S_n, substr(pid_x,0,1) != '-' & substr(pid_x,0,1) != '4'),
voter_cat = ifelse(substr(pid_x,0,1)) < 4, 'Democrat', 'Republican'))
S_n_2 <- mutate(subset(S_n, substr(pid_x,0,1) != '-' & substr(pid_x,0,1) != '4'),
voter_cat = ifelse(substr(pid_x,0,1) < 4, 'Democrat', 'Republican'))
unique(S_n_2$pid_x, S_n_2$voter_cat)
unique(S_n_2$pid_x)
unique(ifelse(substr(S_n$pid_x,0,1) < 4, 'Democrat', 'Republican')
unique(ifelse(substr(S_n$pid_x,0,1) < 4, 'Democrat', 'Republican'))
ifelse(substr(S_n$pid_x,0,1) < 4, 'Democrat', 'Republican')
unique(ifelse(substr(S_n$pid_x,0,1) < 4, 'Democrat', 'Republican'))
S_n_2 <- mutate(subset(S_n, substr(pid_x,0,1) != '-' & substr(pid_x,0,1) != '4'),
voter_cat = ifelse(substr(pid_x,0,1) < 4, 'Democrat', 'Republican'))
table(pid_x,ifelse(substr(S_n$pid_x,0,1) < 4, 'Democrat', 'Republican'))
table(S_n$pid_x,ifelse(substr(S_n$pid_x,0,1) < 4, 'Democrat', 'Republican'))
table(S_n_2$pid_x,ifelse(substr(S_n$pid_x,0,1) < 4, 'Democrat', 'Republican'))
S_n_2 <- mutate(subset(S_n, substr(pid_x,0,1) != '-' & substr(pid_x,0,1) != '4'),
voter_cat = ifelse(substr(pid_x,0,1) < 4, 'Democrat', 'Republican'))
table(S_n_2$pid_x,ifelse(substr(S_n_2$pid_x,0,1) < 4, 'Democrat', 'Republican'))
S_n_2 <- subset(
mutate(S_n,
voter_cat = ifelse(substr(pid_x,0,1) < 4, 'Democrat', 'Republican')
),
substr(pid_x,0,1) != '-' & substr(pid_x,0,1) != '4'
)
table(S_n_2$pid_x,ifelse(substr(S_n_2$pid_x,0,1) < 4, 'Democrat', 'Republican'))
S_n_2 <- mutate(subset(S_n,substr(pid_x,0,1) != '-' & substr(pid_x,0,1) != '4'),
voter_cat = ifelse(substr(pid_x,0,1) < 4, 'Democrat', 'Republican')
)
unique(S_n_2$pid_x)
table(S_n_2$pid_x,ifelse(substr(S_n_2$pid_x,0,1) < 4, 'Democrat', 'Republican'))
S_n_2 <- mutate(subset(S_n,substr(pid_x,0,1) != '-' & substr(pid_x,0,1) != '4'),
voter_cat = factor(ifelse(substr(pid_x,0,1) < 4, 'Democrat', 'Republican'))
)
summary(S_n_2$voter_cat)
summary(as.numeric(S_n_2$voter_cat)
as.numeric()
summary(as.numeric(S_n_2$voter_cat))
levels(S_n_2$voter_cat)
summary(S_n_2$dem_age_r_x)
hist(S_n_2$dem_age_r_x)
S_n_2 <- subset(S_n_2,dem_age_r_x > 0)
hist(S_n_2$dem_age_r_x, breaks = 50,
main = "Histogram of Voter Age",
xlab = "Voter Age")
main = "Histogram of Voter Age",
hist(S_n_2$dem_age_r_x, breaks = 50,
main = "Histogram of Voter Age",
xlab = "Age")
t.test(dem_age_r_x ~ voter_cat, data = S_n_2)
t.test(dem_age_r_x ~ voter_cat, data = S_n_2, lower.tail = T)
t.test(dem_age_r_x ~ voter_cat, data = S_n_2, lower.tail = F)
t.test(dem_age_r_x ~ voter_cat, data = S_n_2)
cohen.d(dem_age_r_x ~ voter_cat, data = S_n_2)
S_n_2 <- mutate(subset(S_n,substr(pid_x,0,1) != '-' & substr(pid_x,0,1) != '4',
select = c(pid_x,dem_age_r_x)),
voter_cat = factor(ifelse(substr(pid_x,0,1) < 4, 'Democrat', 'Republican'))
)
summary(S_n_2$voter_cat)
S_n_2 <- subset(S_n_2,dem_age_r_x > 0)
S_n_3 <- subset(S_n_2, voter_cat = "Republican", select = c(voter_cat, dem_age_r_x))
S_n_3 <- subset(S_n_2, voter_cat == "Republican", select = c(voter_cat, dem_age_r_x))
summary(S_n_3$dem_age_r_x)
hist(S_n_2$dem_age_r_x, breaks = 50,
main = "Histogram of Republican Voter Age",
xlab = "Age")
t.test(S_n_3$dem_age_r_x - 50)
t.test(S_n_3$dem_age_r_x - 50, upper = T)
t.test(S_n_3$dem_age_r_x - 50, lower.tail = FALSE)
t.test(S_n_3$dem_age_r_x - 50, greater)
t.test(S_n_3$dem_age_r_x - 50, "greater"")
t.test(S_n_3$dem_age_r_x - 50, "greater")
t.test(S_n_3$dem_age_r_x - 50, alternative = "greater")
t.test(S_n_3$dem_age_r_x - 50)
t.test(S_n_3$dem_age_r_x - 50)
t.test(S_n_3$dem_age_r_x - 50, alternative = "greater")
t.test(dem_age_r_x ~ voter_cat, data = S_n_2)
cohen.d(S_n_1$libcpo_self_n, 50)
cohen.d(S_n_1$libcpo_self_n - 50)
cohen.d(S_n_3$dem_age_r_x - 50)
cohen.d(S_n_3$dem_age_r_x, 50)
cohen.d(S_n_3$dem_age_r_x)
(mean(S_n_3$dem_age_r_x) - 50) / sd(S_n_3$dem_age_r_x)
table(S$libcpre_self, as.numeric(S$libcpre_self))
table(S$libcpo_self, as.numeric(S$libcpo_self))
wilcox.test(S_n_1$libcpo_self_n, S_n_1$libcpre_self_n, paired = TRUE)
install.packages("BSDA")
library(BSDA)
load("~/Desktop/W203/Live Session/Live Session 10/Gpa.Rdata")
